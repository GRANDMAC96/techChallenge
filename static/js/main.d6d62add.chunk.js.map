{"version":3,"sources":["components/Header/Header.js","components/PlayerName/PlayerName.js","components/PlayerName/index.js","data/actions.js","components/PlayerList/PlayerList.js","components/PlayerList/index.js","App.js","data/reducers.js","data/initial.js","data/store.js","index.js"],"names":["Header","className","PlayerName","props","state","playername","handlePlayer","bind","handleSubmit","e","this","setState","currentTarget","value","preventDefault","handleAddition","type","placeholder","onChange","onClick","Component","connect","dispatch","data","PlayerList","playerlist","Table","responsive","map","player","index","key","App","Fragment","reducer","action","list","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"gPAYeA,EAVA,WACX,OACI,oCACI,4BAAQC,UAAU,UACd,wBAAIA,UAAU,MAAd,uB,8CCmDDC,E,kDAhDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,WAAYF,EAAME,YAEtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDAUNE,GACTC,KAAKC,SAAS,CAAEN,WAAYI,EAAEG,cAAcC,U,mCAMnCJ,GACTA,EAAEK,iBAGFJ,KAAKP,MAAMY,eAAeL,KAAKN,MAAMC,YACrCK,KAAKC,SAAS,CAAEN,WAAY,O,+BAEtB,IACAA,EAAeK,KAAKN,MAApBC,WACN,OACI,oCACI,0BAAMJ,UAAU,QACZ,6BACI,8CACA,2BACIe,KAAK,OACLC,YAAY,aACZJ,MAAOR,EACPa,SAAUR,KAAKJ,iBAI3B,4BACIa,QAAST,KAAKF,aACdP,UAAU,UAFd,mB,GAxCSmB,aCWVC,eAdS,SAACjB,GACrB,MAAO,CACHC,WAAYD,EAAMC,eAIC,SAACiB,GACxB,MAAO,CACHP,eAAgB,SAACQ,GACbD,ECbD,CACHN,KAAM,YACNX,WDWkBkB,QAKXF,CAA6CnB,G,QEM7CsB,EArBI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAA6B,EAAjBpB,WAC9B,OACI,oCACI,kBAACqB,EAAA,EAAD,CAAOC,YAAU,GACb,+BACI,4BACI,sCAGR,+BACIF,EAAWG,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAIC,IAAKD,GACL,4BAAKD,EAAOxB,oBCPzBgB,eANS,SAACjB,GACrB,MAAO,CACHqB,WAAYrB,EAAMqB,cAIXJ,CAAyBG,GCYzBQ,EAZH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,+BCMOC,EAPC,SAAC9B,EAAO+B,GACpB,OAAQA,EAAOnB,MACX,IAAK,YAAa,OAfb,SAACZ,EAAO+B,GACjB,OAAO,2BACA/B,GADP,IAEIqB,WAAW,GAAD,mBACHrB,EAAMqB,YADH,CAEN,CACIpB,WAAY8B,EAAO9B,gBASF+B,CAAKhC,EAAO+B,GACrC,QAAS,OAAO/B,ICZTiC,EALM,CACjBhC,WAAY,GACZoB,WAAY,ICEVa,EAAmBC,OAAOC,sCAAwCC,IAQzDC,EANDC,YACVT,EACAG,EACAC,EAAiBM,gBCCrBC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.d6d62add.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n    return (\n        <>\n            <header className=\"header\">\n                <h1 className=\"h1\">Select Your Team</h1>\n            </header>\n        </>\n    )\n}\n\nexport default Header; ","import React, { Component } from 'react';\n\n\n// import { saveSettings } from \"../../data/actions\";\n\n// winningScore, alternate, player1Name, player2Name\n// I'm setting up a class to control my local state of my settings form.\n\nclass PlayerName extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playername: props.playername,\n        }\n        this.handlePlayer = this.handlePlayer.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handlePlayer(e) {\n        this.setState({ playername: e.currentTarget.value });\n    }\n\n    // handleWinningScore(e) {\n    //     this.setState({ winningScore: e.currentTarget.value });\n    // }\n    handleSubmit(e) {\n        e.preventDefault();\n        // call the passed in function\n        // pass it the current input value \n        this.props.handleAddition(this.state.playername);\n        this.setState({ playername: \"\" });\n    }\n    render() {\n        let { playername } = this.state;\n        return (\n            <>\n                <form className=\"form\">\n                    <div>\n                        <label>Player Name</label>\n                        <input\n                            type=\"name\"\n                            placeholder=\"Enter name\"\n                            value={playername}\n                            onChange={this.handlePlayer}\n                        />\n                    </div>\n                </form>\n                <button\n                    onClick={this.handleSubmit}\n                    className=\"button\">Add Player\n                </button>\n            </>\n        );\n    }\n}\n\nexport default PlayerName;","import { connect } from \"react-redux\";\nimport PlayerName from \"./PlayerName\";\nimport { list } from \"../../data/actions\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        playername: state.playername,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleAddition: (data) => {\n            dispatch(list(data));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerName);\n\n// export default connect(mapStateToProps)(PlayerName);","export const list = (playername) => {\n    return {\n        type: \"ADDPLAYER\",\n        playername: playername\n    };\n};","import React from \"react\";\nimport Table from 'react-bootstrap/Table';\n\n\nconst PlayerList = ({ playerlist, playername }) => {\n    return (\n        <>\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                    </tr>\n                </thead>\n                <tbody>{\n                    playerlist.map((player, index) =>\n                        <tr key={index}>\n                            <td>{player.playername}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default PlayerList; ","import { connect } from \"react-redux\";\nimport PlayerList from \"./PlayerList\";\n\nconst mapStateToProps = (state) => {\n    return {\n        playerlist: state.playerlist\n    }\n}\n\nexport default connect(mapStateToProps)(PlayerList);","import React, { Fragment } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport PlayerName from './components/PlayerName';\nimport PlayerList from './components/PlayerList';\n\nconst App = () => {\n  return (\n    <Router>\n      <React.Fragment>\n        <Header />\n        <PlayerName />\n        <PlayerList />\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","\nconst list = (state, action) => {\n    return {\n        ...state,\n        playerlist: [\n            ...state.playerlist,\n            {\n                playername: action.playername\n            }\n        ]\n    }\n}\n\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADDPLAYER\": return list(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","const initialState = {\n    playername: \"\",\n    playerlist: [],\n};\n\nexport default initialState;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducers\";\nimport initialState from \"./initial\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware())\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport \"../src/styles/main.css\";\nimport store from \"./data/store\";\n//  import initial from \"./data/initial\";\n// import reducers from \"./data/reducers\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}